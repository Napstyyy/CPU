$date
	Mon Apr 29 19:07:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RegisterUnit_tb $end
$var wire 32 ! RURs2 [31:0] $end
$var wire 32 " RURs1 [31:0] $end
$var reg 32 # DataWr [31:0] $end
$var reg 1 $ RUWr $end
$var reg 1 % clk $end
$var reg 5 & rd [4:0] $end
$var reg 5 ' rs1 [4:0] $end
$var reg 5 ( rs2 [4:0] $end
$scope module dut $end
$var wire 32 ) DataWr [31:0] $end
$var wire 32 * RURs1 [31:0] $end
$var wire 32 + RURs2 [31:0] $end
$var wire 1 $ RUWr $end
$var wire 1 % clk $end
$var wire 5 , rd [4:0] $end
$var wire 5 - rs1 [4:0] $end
$var wire 5 . rs2 [4:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 / i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
0%
0$
b0 #
b0 "
b0 !
$end
#5
1%
#10
0%
b10011010010 #
b10011010010 )
b101 &
b101 ,
1$
#15
1%
#20
0%
0$
#25
1%
#30
0%
